version: '3.8'

services:
    traefik:
        container_name: ${DOCKER_CONTAINER_NAMESPACE}_traefik
        image: traefik:v2.10.4
        command:
            - "--api.insecure=false"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.websecure.address=:443"
            - "--certificatesresolvers.traefikresolver.acme.tlschallenge=true"
            - "--certificatesresolvers.traefikresolver.acme.email=social@coderwelsch.com"
            - "--certificatesresolvers.traefikresolver.acme.storage=/letsencrypt/acme.json"
        ports:
            - "443:443"
            - "8080:8080"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./letsencrypt:/letsencrypt
        networks:
            - traefik_network

    postgres:
        image: postgres:13
        container_name: ${DOCKER_CONTAINER_NAMESPACE}_postgres
        env_file:
            - ./.env
        environment:
            POSTGRES_DB: ${DATABASE_NAME}
            POSTGRES_USER: ${DATABASE_USERNAME}
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
        ports:
            - "${DATABASE_PORT}:${DATABASE_PORT}"
        volumes:
            - ./database:/var/lib/postgresql/data
        networks:
            - traefik_network

    strapi:
        container_name: ${DOCKER_CONTAINER_NAMESPACE}_strapi
        build:
            context: ./services/cms
            dockerfile: Dockerfile
        environment:
            APP_PROXY: true
            PORT: 80
            HOST: ${STRAPI_INTERNAL_HOST}
            PUBLIC_URL: http://${DOMAIN_CMS}
            APP_KEYS: ${STRAPI_APP_KEYS}
            API_TOKEN_SALT: ${STRAPI_API_TOKEN_SALT}
            ADMIN_JWT_SECRET: ${STRAPI_ADMIN_JWT_SECRET}
            TRANSFER_TOKEN_SALT: ${STRAPI_TRANSFER_TOKEN_SALT}
            JWT_SECRET: ${STRAPI_JWT_SECRET}
            WEBHOOKS_POPULATE_RELATIONS: ${STRAPI_WEBHOOKS_POPULATE_RELATIONS}
            SMTP_HOST: ${STRAPI_SMTP_HOST}
            SMTP_PORT: ${STRAPI_SMTP_PORT}
            SMTP_USERNAME: ${STRAPI_SMTP_USERNAME}
            SMTP_PASSWORD: ${STRAPI_SMTP_PASSWORD}
            DEFAULT_EMAIL_FROM: ${STRAPI_DEFAULT_EMAIL_FROM}
            DEFAULT_EMAIL_REPLY_TO: ${STRAPI_DEFAULT_EMAIL_REPLY_TO}
            DATABASE_CLIENT: ${DATABASE_CLIENT}
            DATABASE_HOST: ${DATABASE_HOST}
            DATABASE_PORT: ${DATABASE_PORT}
            DATABASE_NAME: ${DATABASE_NAME}
            DATABASE_USERNAME: ${DATABASE_USERNAME}
            DATABASE_PASSWORD: ${DATABASE_PASSWORD}
        volumes:
            - ./services/cms/:/srv/app
            - /srv/app/node_modules
        links:
            - postgres
        depends_on:
            - postgres
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.strapi.rule=Host(`${DOMAIN_CMS}`)"
            - "traefik.http.routers.strapi.entrypoints=websecure"
            - "traefik.http.routers.strapi.tls.certresolver=traefikresolver"
            - "traefik.http.routers.strapi.middlewares=redirect-to-https"
        networks:
            - traefik_network

    frontend:
        container_name: ${DOCKER_CONTAINER_NAMESPACE}_frontend
        build:
            context: ./services/frontend
            dockerfile: Dockerfile
        volumes:
            - ./services/frontend:/usr/src/app
            - /usr/src/app/node_modules
        links:
            - strapi:strapi
        environment:
            NEXT_PUBLIC_API_URL: http://${DOMAIN_FRONTEND}
            NEXTAUTH_URL: http://${DOMAIN_FRONTEND}
            NEXTAUTH_URL_INTERNAL: http://frontend
            NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
            NEXT_TELEMETRY_DISABLED: "1"
            NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN: ${MAPBOX_ACCESS_TOKEN}
            NEXT_PUBLIC_MAPBOX_STYLE_URL: ${MAPBOX_STYLE_URL}
            NEXT_PUBLIC_CMS_GRAPHQL_API_URL: http://${DOMAIN_CMS}/graphql
            INTERNAL_CMS_GRAPHQL_API_URL: http://strapi/graphql
            CMS_API_ACCESS_TOKEN: ${STRAPI_API_ACCESS_TOKEN}
        depends_on:
            - strapi
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.frontend.rule=Host(`${DOMAIN_FRONTEND}`)"
            - "traefik.http.routers.strapi.entrypoints=websecure"
            - "traefik.http.routers.strapi.tls.certresolver=traefikresolver"
            - "traefik.http.routers.strapi.middlewares=redirect-to-https"
        networks:
            - traefik_network

networks:
    traefik_network:
        driver: bridge

volumes:
    database:

